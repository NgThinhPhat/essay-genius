services:
  # POSTGRES
  identity-service-postgres:
    image: postgres:${SOFTWARE_VERSION_TAG}
    container_name: identity-service-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: eternity_user
      POSTGRES_PASSWORD: a_will_eternal
      PGDATA: /var/lib/postgresql/data
    volumes:
      - essay-genius-identity-service-postgres-data:/var/lib/postgresql/data
      - ./identity-service/identity-service-postgres-init-db:/docker-entrypoint-initdb.d
    ports:
      - '5432:5432'
    networks:
      - essay-genius-network

  # PGADMIN
  identity-service-pgadmin:
    image: elestio/pgadmin:latest
    depends_on: [ identity-service-postgres ]
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${ADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${ADMIN_PASSWORD}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - essay-genius-identity-service-pgadmin-data:/var/lib/pgadmin
    networks:
      - essay-genius-network

  #  REDIS
  identity-service-redis:
    image: redis:latest
    container_name: identity-service-redis
    volumes:
      - essay-genius-identity-service-redis-data:/data
    ports:
      - "6379:6379"
    networks:
      - essay-genius-network
    restart: unless-stopped

  # KAFKA BROKER
  essay-genius-kafka-broker:
    image: bitnami/kafka:3.5.2-debian-12-r24
    container_name: essay-genius-kafka-broker
    hostname: kafka
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    volumes:
      - ./docker/kafka/certs:/bitnami/kafka/config/certs
      - essay-genius-kafka-broker-data:/var/lib/kafka/data
    ports:
      - "9094:9094"
    networks:
      - essay-genius-network
    restart: unless-stopped

  #  MONGODB
  essay-service-mongodb:
    image: mongo:latest
    container_name: essay-service-mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: eternity_user
      MONGO_INITDB_ROOT_PASSWORD: a_will_eternal
    volumes:
      - essay-service-mongodb-data:/data/db
    ports:
      - "27017:27017"
    networks:
      - essay-genius-network
    restart: unless-stopped

  # MONGODB EXPRESS
  essay-service-mongo-express:
    image: mongo-express:1.0.2-20-alpine3.19
    container_name: essay-service-mongo-express
    depends_on:
      [ essay-service-mongodb ]
    environment:
      ME_CONFIG_MONGODB_ENABLE_ADMIN: true
      ME_CONFIG_MONGODB_ADMINUSERNAME: eternity_user
      ME_CONFIG_MONGODB_ADMINPASSWORD: a_will_eternal
      ME_CONFIG_MONGODB_SERVER: essay-service-mongodb
      ME_CONFIG_BASICAUTH_USERNAME: root
      ME_CONFIG_BASICAUTH_PASSWORD: root
    ports:
      - "5051:8081"
    networks:
      - essay-genius-network
    restart: unless-stopped

  interaction-service-mongodb:
    image: mongo:latest
    container_name: interaction-service-mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: eternity_user
      MONGO_INITDB_ROOT_PASSWORD: a_will_eternal
    volumes:
      - interaction-service-mongodb-data:/data/db
    ports:
      - "27019:27017"
    networks:
      - essay-genius-network
    restart: unless-stopped

networks:
  essay-genius-network:
    driver: bridge

volumes:
  essay-genius-identity-service-postgres-data:
  essay-genius-identity-service-pgadmin-data:
  essay-genius-identity-service-redis-data:
  essay-genius-kafka-broker-data:
  essay-service-mongodb-data:
  interaction-service-mongodb-data:
